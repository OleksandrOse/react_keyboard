{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","text","document","removeEventListener","this","handleClickButton","addEventListener","event","setState","key","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAyB,CACvBC,KAAM,2BAFV,+DAKE,WACEC,SAASC,oBAAoB,QAASC,KAAKC,qBAN/C,+BASE,WAAqB,IAAD,OAClBH,SAASI,iBAAiB,SAAS,SAACC,GAClC,EAAKF,kBAAkBE,QAX7B,+BAeE,SAAkBA,GAChBH,KAAKI,SAAS,CAAEP,KAAK,4BAAD,OAA8BM,EAAME,IAApC,SAhBxB,oBAmBE,WACE,IAAQR,EAASG,KAAKJ,MAAdC,KAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BT,UAxBrC,GAAyBU,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.717d44cf.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  text: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    text: 'Nothing was pressed yet',\n  };\n\n  UNSAFE_componentWillMount() {\n    document.removeEventListener('keyup', this.handleClickButton);\n  }\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.handleClickButton(event);\n    });\n  }\n\n  handleClickButton(event: KeyboardEvent) {\n    this.setState({ text: `The last pressed key is [${event.key}]` });\n  }\n\n  render() {\n    const { text } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{text}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}